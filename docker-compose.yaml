version: '3.7'
# ====================================== AIRFLOW ENVIRONMENT VARIABLES =======================================
x-environment: &airflow_environment
  - AIRFLOW__CELERY__BROKER_URL=amqp://guest:guest@rabbitmq:5672//
  - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres:5432/airflow
  - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
  - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False
  - AIRFLOW__CORE__LOAD_EXAMPLES=False
  - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
  - AIRFLOW__CORE__STORE_DAG_CODE=True
  - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
  - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
  - AIRFLOW__WEBSERVER__RBAC=False
  - AIRFLOW_CONN_MY_POSTGRES=postgresql://airflow:airflow@prices:5433/airflow
x-airflow-image: &airflow_image apache/airflow:2.1.2-python3.9
# ====================================== /AIRFLOW ENVIRONMENT VARIABLES ======================================
services:
  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
  prices:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5433:5432"
    volumes:
      - ./scripts/create_table.sql:/docker-entrypoint-initdb.d/create_table.sql
  init:
    build:
      context: docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: manning-airflow/airflow-data
    depends_on:
      - postgres
    environment: *airflow_environment
    entrypoint: /bin/bash
    command: -c 'airflow db init && airflow db update && sleep 5 && airflow users create --username admin --password admin --firstname Anonymous --lastname Admin --role Admin --email admin@example.org'
  webserver:
    build:
      context: docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: manning-airflow/airflow-data
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    volumes:
      - logs:/opt/airflow/logs
    environment: *airflow_environment
    command: webserver
  scheduler:
    build:
      context: docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: manning-airflow/airflow-data
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./dags:/opt/airflow/dags
      - data:/data
      - logs:/opt/airflow/logs
      - ./tests:/opt/airflow/tests
    environment: *airflow_environment
    command: airflow scheduler

  worker:
    image: apache/airflow:2.1.2-python3.9
    restart: always
    depends_on:
      - scheduler
    volumes:
      - ./ether_price_predict.py:/opt/airflow/dags/ether_price_predict.py
      - logs:/opt/airflow/logs
    environment: *airflow_environment
    command: celery worker

  flower:
    image: apache/airflow:2.1.2-python3.9
    restart: always
    depends_on:
      - worker
    ports:
      - "5555:5555"
    environment: *airflow_environment
    command: celery flower

  rabbitmq:
    image: rabbitmq:3.8.9-management
    restart: unless-stopped
    volumes:
    - rabbitmqdata:/etc/rabbitmq
    - queuedata:/var/lib/rabbitmq/mnesia
    ports:
    - "5672:5672"
    - "15672:15672"
    environment: *airflow_environment

volumes:
  data:
  logs:
  tests:
  queuedata:
    driver: local
  rabbitmqdata:
    driver: local
